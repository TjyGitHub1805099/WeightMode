<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\firmware_wm_00_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\firmware_wm_00_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060020: Last Updated: Mon Dec 07 23:10:37 2020
<BR><P>
<H3>Maximum Stack Usage =        124 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIM6_DAC_IRQHandler &rArr; app_main_task &rArr; sdwe_MainFunction &rArr; sdwe_TxFunction &rArr; sdweWrite &rArr; cal_crc16
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[67]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[9]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">NMI_Handler</a><BR>
 <LI><a href="#[a]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">HardFault_Handler</a><BR>
 <LI><a href="#[b]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">MemManage_Handler</a><BR>
 <LI><a href="#[c]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">BusFault_Handler</a><BR>
 <LI><a href="#[d]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">UsageFault_Handler</a><BR>
 <LI><a href="#[e]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">SVC_Handler</a><BR>
 <LI><a href="#[f]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">DebugMon_Handler</a><BR>
 <LI><a href="#[10]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">PendSV_Handler</a><BR>
 <LI><a href="#[11]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">SysTick_Handler</a><BR>
 <LI><a href="#[24]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[24]">ADC1_2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[41]">ADC3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4c]">ADC4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[c]">BusFault_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[27]">CAN1_RX1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[28]">CAN1_SCE_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4d]">COMP1_2_3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4e]">COMP4_5_6_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4f]">COMP7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel2_IRQHandler</a> from hal_uart.o(i.DMA1_Channel2_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1f]">DMA1_Channel3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[20]">DMA1_Channel4_IRQHandler</a> from hal_uart.o(i.DMA1_Channel4_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[21]">DMA1_Channel5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[22]">DMA1_Channel6_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[23]">DMA1_Channel7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[47]">DMA2_Channel1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[48]">DMA2_Channel2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[49]">DMA2_Channel3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4a]">DMA2_Channel4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4b]">DMA2_Channel5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[f]">DebugMon_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[18]">EXTI0_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3a]">EXTI15_10_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[19]">EXTI1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1a]">EXTI2_TS_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1b]">EXTI3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1c]">EXTI4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[29]">EXTI9_5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[16]">FLASH_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[53]">FPU_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[a]">HardFault_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[32]">I2C1_ER_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[31]">I2C1_EV_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[34]">I2C2_ER_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[33]">I2C2_EV_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[b]">MemManage_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[9]">NMI_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[13]">PVD_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[10]">PendSV_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[17]">RCC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3b]">RTC_Alarm_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[15]">RTC_WKUP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[8]">Reset_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[35]">SPI1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[36]">SPI2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[42]">SPI3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[e]">SVC_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[11]">SysTick_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[14]">TAMPER_STAMP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2a]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2d]">TIM1_CC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2c]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2b]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2e]">TIM2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2f]">TIM3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[30]">TIM4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[45]">TIM6_DAC_IRQHandler</a> from hal_timer.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[46]">TIM7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3d]">TIM8_BRK_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[40]">TIM8_CC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3f]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3e]">TIM8_UP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[43]">UART4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[44]">UART5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[37]">USART1_IRQHandler</a> from hal_uart.o(i.USART1_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[38]">USART2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[39]">USART3_IRQHandler</a> from hal_uart.o(i.USART3_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3c]">USBWakeUp_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[52]">USBWakeUp_RMP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[25]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[50]">USB_HP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[26]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[51]">USB_LP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[d]">UsageFault_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[12]">WWDG_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[55]">__main</a> from __main.o(!!!main) referenced from startup_stm32f30x.o(.text)
 <LI><a href="#[2]">hal_uart_port_init</a> from hal_uart.o(i.hal_uart_port_init) referenced 4 times from hal_uart.o(.data)
 <LI><a href="#[7]">hal_uart_rx_irq_disable</a> from hal_uart.o(i.hal_uart_rx_irq_disable) referenced 4 times from hal_uart.o(.data)
 <LI><a href="#[6]">hal_uart_rx_irq_enable</a> from hal_uart.o(i.hal_uart_rx_irq_enable) referenced 4 times from hal_uart.o(.data)
 <LI><a href="#[3]">hal_uart_set_braudrate</a> from hal_uart.o(i.hal_uart_set_braudrate) referenced 4 times from hal_uart.o(.data)
 <LI><a href="#[4]">hal_uart_set_timeout</a> from hal_uart.o(i.hal_uart_set_timeout) referenced 4 times from hal_uart.o(.data)
 <LI><a href="#[5]">hal_uart_tx_bytes</a> from hal_uart.o(i.hal_uart_tx_bytes) referenced 4 times from hal_uart.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[55]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[56]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[58]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[c2]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[c3]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[c4]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[c5]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[c6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[5e]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[59]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[c7]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[c8]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[c9]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[ca]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[cb]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[cc]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[cd]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ce]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[cf]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[d0]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[d1]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[d2]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[d3]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[d4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[d5]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[d6]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[d7]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[d8]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[d9]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[da]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[63]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[db]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[dc]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[dd]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[de]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[df]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[e0]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[e1]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[57]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[e2]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[5b]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5d]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[e3]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[5f]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; system_init &rArr; hal_clock_init &rArr; drv_rcc_init &rArr; drv_rcc_get_clocks_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[e4]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[68]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[62]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[e5]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[64]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[8]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>COMP1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>COMP4_5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>COMP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI2_TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USBWakeUp_RMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f30x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e6]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[61]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e9]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ea]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[eb]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>BubbleSort</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, app_led_ctrl.o(i.BubbleSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BubbleSort
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;useWeightUpdateLedAndSdweColor
</UL>

<P><STRONG><a name="[1e]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal_uart.o(i.DMA1_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA1_Channel2_IRQHandler &rArr; drv_dma_stream_get_it_status
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_it_enable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_get_it_status
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_disable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_clear_it_pending_bit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal_uart.o(i.DMA1_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA1_Channel4_IRQHandler &rArr; drv_dma_stream_get_it_status
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_it_enable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_get_it_status
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_disable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_clear_it_pending_bit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>LedCtrlSendPulse</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, app_led_ctrl.o(i.LedCtrlSendPulse))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LedCtrlSendPulse
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_low
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_high
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_MainFunction
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[bf]"></a>LedDataSet</STRONG> (Thumb, 132 bytes, Stack size 20 bytes, app_led_ctrl.o(i.LedDataSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LedDataSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;useWeightUpdateLedAndSdweColor
</UL>

<P><STRONG><a name="[6f]"></a>Led_delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_led_ctrl.o(i.Led_delay))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCtrlSendPulse
</UL>

<P><STRONG><a name="[45]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hal_timer.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; app_main_task &rArr; sdwe_MainFunction &rArr; sdwe_TxFunction &rArr; sdweWrite &rArr; cal_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer_clear_it_pending_bit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USART1_IRQHandler</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, hal_uart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART1_IRQHandler &rArr; drv_uart_it_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_it_enable
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_it_disable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_clear_it_pending_bit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_get_left_length
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_enable
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_disable
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_set_mem_addr_length
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_rx_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USART3_IRQHandler</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, hal_uart.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART3_IRQHandler &rArr; hal_uart_port_init &rArr; hal_uart_gpio_init &rArr; drv_gpio_output_init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_extern_msg_packet_process
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_clear_it_pending_bit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_get_left_length
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_enable
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_disable
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_set_mem_addr_length
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_rx_mode
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>app_main_task</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, app_main_task.o(i.app_main_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = app_main_task &rArr; sdwe_MainFunction &rArr; sdwe_TxFunction &rArr; sdweWrite &rArr; cal_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;useWeightUpdateLedAndSdweColor
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_test
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_MainFunction
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleCalcKB
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_MainFunction
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_MainFunction
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_FilterGet
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_MainFunction
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>app_uart_extern_msg_packet_process</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, app_sdwe_ctrl.o(i.app_uart_extern_msg_packet_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = app_uart_extern_msg_packet_process
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdweRxDeal
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[b9]"></a>cal_crc16</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, app_crc.o(i.cal_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = cal_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdweWrite
</UL>

<P><STRONG><a name="[97]"></a>drv_debug_apb1_stop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_dbgmcu.o(i.drv_debug_apb1_stop))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[92]"></a>drv_delay_init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, drv_delay.o(i.drv_delay_init))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_delay_init
</UL>

<P><STRONG><a name="[94]"></a>drv_delay_us</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, drv_delay.o(i.drv_delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_delay_us
</UL>

<P><STRONG><a name="[75]"></a>drv_dma_set_mem_addr_length</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_dma.o(i.drv_dma_set_mem_addr_length))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>drv_dma_stream_clear_flag_status</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drv_dma.o(i.drv_dma_stream_clear_flag_status))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
</UL>

<P><STRONG><a name="[6c]"></a>drv_dma_stream_clear_it_pending_bit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, drv_dma.o(i.drv_dma_stream_clear_it_pending_bit))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>drv_dma_stream_deinit</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, drv_dma.o(i.drv_dma_stream_deinit))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_init
</UL>

<P><STRONG><a name="[6a]"></a>drv_dma_stream_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, drv_dma.o(i.drv_dma_stream_disable))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
</UL>

<P><STRONG><a name="[76]"></a>drv_dma_stream_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_dma.o(i.drv_dma_stream_enable))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>drv_dma_stream_get_it_status</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, drv_dma.o(i.drv_dma_stream_get_it_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_dma_stream_get_it_status
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>drv_dma_stream_get_left_length</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drv_dma.o(i.drv_dma_stream_get_left_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_dma_stream_get_left_length
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>drv_dma_stream_init</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, drv_dma.o(i.drv_dma_stream_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_dma_stream_init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[a8]"></a>drv_dma_stream_it_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_dma.o(i.drv_dma_stream_it_enable))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[ae]"></a>drv_dma_stream_start_mem_to_periph</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, drv_dma.o(i.drv_dma_stream_start_mem_to_periph))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_dma_stream_start_mem_to_periph
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
</UL>

<P><STRONG><a name="[9e]"></a>drv_dma_stream_start_periph_to_mem</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, drv_dma.o(i.drv_dma_stream_start_periph_to_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_dma_stream_start_periph_to_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_dma_rx_start
</UL>

<P><STRONG><a name="[a2]"></a>drv_gpio_alternate_function_connect</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_alternate_function_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_gpio_alternate_function_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_gpio_init
</UL>

<P><STRONG><a name="[a1]"></a>drv_gpio_alternate_function_init</STRONG> (Thumb, 220 bytes, Stack size 28 bytes, drv_gpio.o(i.drv_gpio_alternate_function_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = drv_gpio_alternate_function_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_gpio_init
</UL>

<P><STRONG><a name="[c1]"></a>drv_gpio_input_init</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, drv_gpio.o(i.drv_gpio_input_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_gpio_input_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_hal_gpio_init
</UL>

<P><STRONG><a name="[a3]"></a>drv_gpio_output_init</STRONG> (Thumb, 220 bytes, Stack size 28 bytes, drv_gpio.o(i.drv_gpio_output_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = drv_gpio_output_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_hal_gpio_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_gpio_init
</UL>

<P><STRONG><a name="[a5]"></a>drv_gpio_set_pins_high</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_uart.o(i.drv_gpio_set_pins_high))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_tx_mode
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_gpio_init
</UL>

<P><STRONG><a name="[9a]"></a>drv_nvic_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, drv_nvic.o(i.drv_nvic_enable))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[99]"></a>drv_nvic_init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, drv_nvic.o(i.drv_nvic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_nvic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[a0]"></a>drv_rcc_ahb1_clk_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_ahb1_clk_enable))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_hal_gpio_init
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_gpio_init
</UL>

<P><STRONG><a name="[96]"></a>drv_rcc_apb1_clk_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_apb1_clk_enable))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[8c]"></a>drv_rcc_apb1_periph_reset_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_apb1_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer_deinit
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_deinit
</UL>

<P><STRONG><a name="[8b]"></a>drv_rcc_apb1_periph_reset_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_apb1_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer_deinit
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_deinit
</UL>

<P><STRONG><a name="[a6]"></a>drv_rcc_apb2_clk_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_apb2_clk_enable))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[8a]"></a>drv_rcc_apb2_periph_reset_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_apb2_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer_deinit
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_deinit
</UL>

<P><STRONG><a name="[89]"></a>drv_rcc_apb2_periph_reset_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_rcc.o(i.drv_rcc_apb2_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer_deinit
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_deinit
</UL>

<P><STRONG><a name="[87]"></a>drv_rcc_get_clocks_freq</STRONG> (Thumb, 238 bytes, Stack size 20 bytes, drv_rcc.o(i.drv_rcc_get_clocks_freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = drv_rcc_get_clocks_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_init
</UL>

<P><STRONG><a name="[86]"></a>drv_rcc_init</STRONG> (Thumb, 694 bytes, Stack size 36 bytes, drv_rcc.o(i.drv_rcc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = drv_rcc_init &rArr; drv_rcc_get_clocks_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_get_clocks_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clock_init
</UL>

<P><STRONG><a name="[98]"></a>drv_timer_base_init</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, drv_timer.o(i.drv_timer_base_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_timer_base_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[71]"></a>drv_timer_clear_it_pending_bit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_timer.o(i.drv_timer_clear_it_pending_bit))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[88]"></a>drv_timer_deinit</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, drv_timer.o(i.drv_timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb2_periph_reset_enable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb2_periph_reset_disable
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb1_periph_reset_enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb1_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[9c]"></a>drv_timer_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_timer.o(i.drv_timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[9b]"></a>drv_timer_it_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_timer.o(i.drv_timer_it_enable))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[ac]"></a>drv_uart_clear_flag_status</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, drv_uart.o(i.drv_uart_clear_flag_status))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
</UL>

<P><STRONG><a name="[73]"></a>drv_uart_clear_it_pending_bit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, drv_uart.o(i.drv_uart_clear_it_pending_bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_uart_clear_it_pending_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_dma_rx_start
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>drv_uart_deinit</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, drv_uart.o(i.drv_uart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_uart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb2_periph_reset_enable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb2_periph_reset_disable
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb1_periph_reset_enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb1_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[a9]"></a>drv_uart_dma_rx_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_uart.o(i.drv_uart_dma_rx_enable))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[a7]"></a>drv_uart_dma_tx_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, drv_uart.o(i.drv_uart_dma_tx_enable))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[ab]"></a>drv_uart_get_flag_status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, drv_uart.o(i.drv_uart_get_flag_status))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
</UL>

<P><STRONG><a name="[8e]"></a>drv_uart_init</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, drv_uart.o(i.drv_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = drv_uart_init &rArr; drv_uart_set_baudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_set_baudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[78]"></a>drv_uart_it_disable</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, drv_uart.o(i.drv_uart_it_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_uart_it_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_rx_irq_disable
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>drv_uart_it_enable</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, drv_uart.o(i.drv_uart_it_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = drv_uart_it_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_rx_irq_enable
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>drv_uart_put_bytes</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drv_uart.o(i.drv_uart_put_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_uart_put_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
</UL>

<P><STRONG><a name="[8f]"></a>drv_uart_set_baudrate</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, drv_uart.o(i.drv_uart_set_baudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_uart_set_baudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_init
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_braudrate
</UL>

<P><STRONG><a name="[90]"></a>hal_clock_init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hal_clock.o(i.hal_clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_clock_init &rArr; drv_rcc_init &rArr; drv_rcc_get_clocks_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[91]"></a>hal_delay_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hal_delay.o(i.hal_delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_delay_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[93]"></a>hal_delay_us</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_hx711_ctrl.o(i.hal_delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_AllChanelSample
</UL>

<P><STRONG><a name="[b0]"></a>hal_di_get</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hal_gpio.o(i.hal_di_get))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_AllChanelSample
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_MainFunction
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_MainFunction
</UL>

<P><STRONG><a name="[70]"></a>hal_gpio_set_do_high</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_gpio.o(i.hal_gpio_set_do_high))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_AllChanelSample
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCtrlSendPulse
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_MainFunction
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_MainFunction
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[6e]"></a>hal_gpio_set_do_low</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_gpio.o(i.hal_gpio_set_do_low))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_AllChanelSample
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCtrlSendPulse
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_MainFunction
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_MainFunction
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[95]"></a>hal_timer_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, hal_timer.o(i.hal_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_timer_init &rArr; drv_nvic_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer_it_enable
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer_enable
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer_deinit
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_timer_base_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb1_clk_enable
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_nvic_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_nvic_enable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_debug_apb1_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[9d]"></a>hal_uart_dma_rx_start</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, hal_uart.o(i.hal_uart_dma_rx_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_uart_dma_rx_start &rArr; drv_uart_clear_it_pending_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_clear_it_pending_bit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_start_periph_to_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[9f]"></a>hal_uart_gpio_init</STRONG> (Thumb, 806 bytes, Stack size 16 bytes, hal_uart.o(i.hal_uart_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_uart_gpio_init &rArr; drv_gpio_output_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ahb1_clk_enable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_output_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_alternate_function_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_alternate_function_connect
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_tx_mode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_rx_mode
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_set_pins_high
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_port_init
</UL>

<P><STRONG><a name="[2]"></a>hal_uart_port_init</STRONG> (Thumb, 560 bytes, Stack size 32 bytes, hal_uart.o(i.hal_uart_port_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = hal_uart_port_init &rArr; hal_uart_gpio_init &rArr; drv_gpio_output_init
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb1_clk_enable
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_nvic_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_nvic_enable
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ahb1_clk_enable
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_it_enable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_dma_tx_enable
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_dma_rx_enable
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_deinit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_clear_it_pending_bit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_apb2_clk_enable
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_it_enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_clear_it_pending_bit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_gpio_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_dma_rx_start
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>hal_uart_rx_irq_disable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hal_uart.o(i.hal_uart_rx_irq_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hal_uart_rx_irq_disable &rArr; drv_uart_it_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_it_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>hal_uart_rx_irq_enable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hal_uart.o(i.hal_uart_rx_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hal_uart_rx_irq_enable &rArr; drv_uart_it_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_it_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>hal_uart_set_braudrate</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, hal_uart.o(i.hal_uart_set_braudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_uart_set_braudrate &rArr; drv_uart_set_baudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_set_baudrate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>hal_uart_set_rx_mode</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_uart.o(i.hal_uart_set_rx_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_uart_set_rx_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_gpio_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[4]"></a>hal_uart_set_timeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal_uart.o(i.hal_uart_set_timeout))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.data)
</UL>
<P><STRONG><a name="[a4]"></a>hal_uart_set_tx_mode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_uart.o(i.hal_uart_set_tx_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_uart_set_tx_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_set_pins_high
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_bytes
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_gpio_init
</UL>

<P><STRONG><a name="[5]"></a>hal_uart_tx_bytes</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, hal_uart.o(i.hal_uart_tx_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = hal_uart_tx_bytes &rArr; drv_uart_it_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_put_bytes
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_it_enable
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_get_flag_status
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_clear_it_pending_bit
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_uart_clear_flag_status
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_start_mem_to_periph
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_get_left_length
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_dma_stream_clear_flag_status
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_tx_mode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_rx_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.data)
</UL>
<P><STRONG><a name="[af]"></a>hx711_AllChanelSample</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, app_hx711_ctrl.o(i.hx711_AllChanelSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hx711_AllChanelSample &rArr; sampleDataPush
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_di_get
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleDataPush
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_delay_us
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_low
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_high
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_DataSampleCtrl
</UL>

<P><STRONG><a name="[b2]"></a>hx711_DataSampleCtrl</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_hx711_ctrl.o(i.hx711_DataSampleCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hx711_DataSampleCtrl &rArr; hx711_AllChanelSample &rArr; sampleDataPush
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_SigChanelAvrgAndWeightCalc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_AllChanelSample
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_MainFunction
</UL>

<P><STRONG><a name="[7b]"></a>hx711_MainFunction</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, app_hx711_ctrl.o(i.hx711_MainFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hx711_MainFunction &rArr; hx711_DataSampleCtrl &rArr; hx711_AllChanelSample &rArr; sampleDataPush
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_di_get
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_DataSampleCtrl
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_low
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_high
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[b3]"></a>hx711_SigChanelAvrgAndWeightCalc</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, app_hx711_ctrl.o(i.hx711_SigChanelAvrgAndWeightCalc))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_DataSampleCtrl
</UL>

<P><STRONG><a name="[bc]"></a>hx711_getWeight</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_hx711_ctrl.o(i.hx711_getWeight))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_TxFunction
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;useWeightUpdateLedAndSdweColor
</UL>

<P><STRONG><a name="[b6]"></a>hx711_init</STRONG> (Thumb, 284 bytes, Stack size 12 bytes, app_hx711_ctrl.o(i.hx711_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hx711_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>key_FilterGet</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_key_ctrl.o(i.key_FilterGet))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[7a]"></a>key_MainFunction</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, app_key_ctrl.o(i.key_MainFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = key_MainFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_di_get
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[b5]"></a>key_init</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, app_key_ctrl.o(i.key_init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>led_MainFunction</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, app_led_ctrl.o(i.led_MainFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = led_MainFunction &rArr; LedCtrlSendPulse
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_low
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_high
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCtrlSendPulse
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[80]"></a>led_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app_led_ctrl.o(i.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = led_init &rArr; LedCtrlSendPulse
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_low
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_do_high
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedCtrlSendPulse
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>main</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main &rArr; system_init &rArr; hal_clock_init &rArr; drv_rcc_init &rArr; drv_rcc_get_clocks_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[81]"></a>sampleCalcKB</STRONG> (Thumb, 322 bytes, Stack size 20 bytes, app_hx711_ctrl.o(i.sampleCalcKB))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sampleCalcKB
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_RxFunction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[b1]"></a>sampleDataPush</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, app_hx711_ctrl.o(i.sampleDataPush))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sampleDataPush
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_AllChanelSample
</UL>

<P><STRONG><a name="[83]"></a>sdweRxDeal</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, app_sdwe_ctrl.o(i.sdweRxDeal))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_extern_msg_packet_process
</UL>

<P><STRONG><a name="[c0]"></a>sdweSetWeightBackColor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_sdwe_ctrl.o(i.sdweSetWeightBackColor))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;useWeightUpdateLedAndSdweColor
</UL>

<P><STRONG><a name="[b8]"></a>sdweWrite</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, app_sdwe_ctrl.o(i.sdweWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = sdweWrite &rArr; cal_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_TxFunction
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_test
</UL>

<P><STRONG><a name="[7e]"></a>sdwe_MainFunction</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_sdwe_ctrl.o(i.sdwe_MainFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = sdwe_MainFunction &rArr; sdwe_TxFunction &rArr; sdweWrite &rArr; cal_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_TxFunction
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_RxFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[ba]"></a>sdwe_RxFunction</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, app_sdwe_ctrl.o(i.sdwe_RxFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = sdwe_RxFunction &rArr; sampleCalcKB
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleCalcKB
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_MainFunction
</UL>

<P><STRONG><a name="[bb]"></a>sdwe_TxFunction</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, app_sdwe_ctrl.o(i.sdwe_TxFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = sdwe_TxFunction &rArr; sdweWrite &rArr; cal_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdweWrite
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_getWeight
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdwe_MainFunction
</UL>

<P><STRONG><a name="[b7]"></a>sdwe_init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, app_sdwe_ctrl.o(i.sdwe_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sdwe_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>sdwe_test</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, app_sdwe_ctrl.o(i.sdwe_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sdwe_test &rArr; sdweWrite &rArr; cal_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdweWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[b4]"></a>system_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_main.o(i.system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = system_init &rArr; hal_clock_init &rArr; drv_rcc_init &rArr; drv_rcc_get_clocks_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_hal_gpio_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_delay_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clock_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>useWeightUpdateLedAndSdweColor</STRONG> (Thumb, 342 bytes, Stack size 64 bytes, app_led_ctrl.o(i.useWeightUpdateLedAndSdweColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = useWeightUpdateLedAndSdweColor &rArr; LedDataSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdweSetWeightBackColor
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hx711_getWeight
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedDataSet
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BubbleSort
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[bd]"></a>wm_hal_gpio_init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, hal_gpio.o(i.wm_hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = wm_hal_gpio_init &rArr; drv_gpio_output_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rcc_ahb1_clk_enable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_output_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gpio_input_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[5a]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[ee]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[ef]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
